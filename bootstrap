#!/bin/sh

#BASEDIR=utils

#. $BASEDIR/environment.sh || exit 1

PROGNAME=bootstrap

#
# Dump some useful informations
#
echo "$PROGNAME: Dumping build-tools information ..."
for tool in autoheader autoconf libtool libtoolize aclocal automake; do
    TOOLVER=`$tool --version | head -1`
    echo "$PROGNAME:   $TOOLVER"
done

#
# Remove files left from the previous run
#
echo "$PROGNAME: Removing autotools related files and directories ..."
rm -f  `find ./ -name "Makefile.in"`                 || exit 1
rm -f  config.cache aclocal.m4 config.h.in configure || exit 1
rm -f  config.guess config.sub ltmain.sh             || exit 1
rm -rf autom4te.cache                                || exit 1

#
# Autofrisk perl modules
#
echo "$PROGNAME: Perl autofrisk ..."
./tools/scripts/perl-autofrisk ./perl.af > ./tools/autotools/m4/perl_autofrisk.m4 || {
    rm -f ./tools/autotools/m4/perl_autofrisk.m4
    exit 1
}

#
# Autofrisk guile modules
#
echo "$PROGNAME: Guile autofrisk ..."
guile-tools autofrisk ./guile.af && mv ./guile.af.m4 ./tools/autotools/m4/guile_autofrisk.m4 || {
    rm -f guile.af.m4
    rm -f ./tools/autotools/m4/guile_autofrisk.m4
    exit 1
}

#
# configure.ac
#
echo "$PROGNAME: Building configure.ac from configure.ac.in"
#if test ! -r ChangeLog ; then
#    echo "$PROGNAME: Cannot read ChangeLog file"
#    exit 1
#fi
#head -n 1 ChangeLog | sed -e 's/:.*//' > VERSION || {
#    echo "$PROGNAME: Cannot build VERSION file"
#    rm -f VERSION
#    exit 1
#}
rm -f configure.ac
VERSION=`git tag -l | tail -n 1`
cat configure.ac.in | sed -e 's,[@]VERSION[@],'$VERSION',' > configure.ac || \
{ rm -f configure.ac ; exit 1 ; }
chmod a-w configure.ac

#
# autoreconf
#
echo "$PROGNAME: Handling autotools bootstrap ..."

echo "$PROGNAME: Running autoreconf ..."
aclocal    --force --install -I ./tools/autotools/m4 && \
autoreconf --verbose --force --install -Wall         || {
    exit 1
}

exit 0
