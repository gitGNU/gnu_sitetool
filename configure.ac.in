# Process this file with autoconf to produce a configure script.

#
# configure.ac for sitetool
#
# Copyright (C) 2007, 2008 Francesco Salvestrini
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
#

AC_INIT([Sitetool],[@VERSION@],[salvestrini@gmail.com],[sitetool])

# Check for a recent version of autoconf
AC_PREREQ([2.61])

# Place/find all autotools related files in the following directories
AC_CONFIG_AUX_DIR([tools/autotools])
AC_CONFIG_MACRO_DIR([tools/autotools/m4])
AC_CONFIG_SRCDIR([src/sitetool.in])

AM_INIT_AUTOMAKE([1.10 foreign -Wall])

#
# Build related programs
#
AC_PROG_MKDIR_P
AC_PROG_GREP
AC_PROG_SED
AC_PROG_AWK
AC_PROG_LN_S
AX_PATH_MISSING([YAPP],     [yapp])
AX_PATH_MISSING([HELP2MAN], [help2man])

#
# Runtime related programs
#
AX_WITH_PERL
AS_IF([test -z "$PERL"],[
	AC_MSG_ERROR([Missing required Perl interpreter])
],[
	AX_PROG_PERL_VERSION([5.8.0],[],[
		AC_MSG_ERROR([Missing required Perl interpreter version >= 5.8.0])
	])

	PERL_AUTOFRISK_CHECKS
	PERL_AUTOFRISK_SUMMARY
])

AX_WITH_GUILE
AS_IF([test -z "$GUILE"],[
	AC_MSG_ERROR([Missing required Guile interpreter])
],[
	AX_PROG_GUILE_VERSION([1.6.4],[],[
		AC_MSG_ERROR([Missing required Guile interpreter version >= 1.6.4])
	])
	
	GUILE_MODULE_REQUIRED([sxml simple])
	GUILE_MODULE_REQUIRED([sxml transform])

	GUILE_AUTOFRISK_CHECKS
	GUILE_AUTOFRISK_SUMMARY
])

AX_WITH_PYTHON
AS_IF([test -z "$PYTHON"],[
	:
],[
	AX_PROG_PYTHON_VERSION([2.4.4],[],[])
])

AX_WITH_RUBY
AS_IF([test -z "$RUBY"],[
	:
],[
	AX_PROG_RUBY_VERSION([1.8.6],[],[])
])

AC_PATH_PROG([TIDY],   [tidy])
AC_PATH_PROG([WPUT],   [wput])
AC_PATH_PROG([WGET],   [wget])

AC_PATH_PROG([MD5SUM],    [md5sum])
AC_PATH_PROG([SHA1SUM],   [sha1sum])
AC_PATH_PROG([SHA224SUM], [sha224sum])
AC_PATH_PROG([SHA256SUM], [sha256sum])
AC_PATH_PROG([SHA384SUM], [sha384sum])
AC_PATH_PROG([SHA512SUM], [sha512sum])

AM_CONDITIONAL([PERL_AVAILABLE],   [ test ! "$PERL" = ""   ])
AM_CONDITIONAL([PYTHON_AVAILABLE], [ test ! "$PYTHON" = "" ])
AM_CONDITIONAL([RUBY_AVAILABLE],   [ test ! "$RUBY" = ""   ])
AM_CONDITIONAL([SCHEME_AVAILABLE], [ test ! "$GUILE" = ""  ])
AM_CONDITIONAL([SHELL_AVAILABLE],  [ test ! "$SHELL" = ""  ])

#
# The API version is the base version.  We must guarantee
# compatibility for all releases with the same API version.
# Our current rule is that:
#
# * All releases, including the prereleases, in an X.Y series
#   are compatible.  So 1.5.1 is compatible with 1.5.
#
# * Prereleases on the trunk are all incompatible -- 1.5.1 and 1.5.2
#   aren't the same.
#
AX_SPLIT_VERSION($PACKAGE_VERSION)
API_VERSION="${AX_MAJOR_VERSION}.${AX_MINOR_VERSION}"
AC_SUBST(API_VERSION)

# Versioned directories, defined here for convenience
AC_SUBST(pkgvdir,     ["\${datadir}/${PACKAGE}-${API_VERSION}"])
AC_SUBST(pkgvbindir,  ["\${datadir}/${PACKAGE}-${API_VERSION}/bin"])
AC_SUBST(pkgvdatadir, ["\${datadir}/${PACKAGE}-${API_VERSION}/data"])
AC_SUBST(pkgvlibsdir, ["\${datadir}/${PACKAGE}-${API_VERSION}/libs"])

AC_CONFIG_FILES([
	Makefile

	docs/Makefile
	docs/man/Makefile
	docs/info/Makefile

	data/Makefile
	data/styles/Makefile
	data/styles/default/Makefile
	data/styles/single-page/Makefile

	src/Makefile
	src/filters/Makefile

	libs/Makefile
	libs/perl/Makefile
	libs/perl/Sitetool/Makefile
	libs/perl/Sitetool/Misc/Makefile
	libs/perl/Sitetool/Base/Makefile
	libs/perl/Sitetool/OS/Makefile
	libs/perl/Sitetool/WWW/Makefile
	libs/python/Makefile
	libs/ruby/Makefile
	libs/scheme/Makefile
	libs/shell/Makefile

	tools/Makefile
	tools/scripts/Makefile
	tools/autotools/Makefile
	tools/autotools/m4/Makefile

	tests/Makefile
	tests/data/Makefile
])

AC_OUTPUT

# Header
cat <<EOF

  ${PACKAGE_NAME} ${API_VERSION} (${PACKAGE_VERSION}) configuration summary

EOF

# Body
if test -n "$PERL" ; then
   echo "    Perl     : ${PERL} (${PERL_VERSION})"
else
   echo "    Perl     : not available"
fi
if test -n "$GUILE" ; then
   echo "    Guile    : ${GUILE} (${GUILE_VERSION})"
else
   echo "    Guile    : not available"
fi
if test -n "$RUBY" ; then
   echo "    Ruby     : ${RUBY} (${RUBY_VERSION})"
else
   echo "    Ruby     : not available"
fi
if test -n "$PYTHON" ; then
   echo "    Python   : ${PYTHON} (${PYTHON_VERSION})"
else
   echo "    Python   : not available"
fi

# Footer
cat <<EOF

EOF
