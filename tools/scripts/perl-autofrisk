#! /usr/bin/perl

#
# perl-autofrisk.in
#
# (C) 2007, 2008 Francesco Salvestrini <salvestrini@users.sourceforge.net>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
#

use strict;
use warnings;

my $program = "perl-autofrisk";

my @regexps = (
    "Sitetool::.*",
    "vars[ \t]+.*",
    "[0-9]\..*"
    );

sub exclude_file($)
{
    my $filename = shift;

    for my $regexp (@regexps) {
	if ($filename =~ /$regexp/) {
	    return 1;
	}
    }

    return 0;
}

#
# Main
#
my @files = ();

if ($#ARGV < 0) {
    print STDERR "$program: Missing parameters\n";
    exit 1;
}
if ($#ARGV > 1) {
    print STDERR "$program: too many parameters\n";
    exit 1;
}

my $rules_file;
$rules_file = $ARGV[0];

my $rules_handle;
if (!open($rules_handle, "<", $rules_file)) {
    print STDERR "$program: Cannot open \`" . $rules_file . "' for input\n";
    exit 1;
}

my $line_number = 0;
while (<$rules_handle>) {
    my $line;
    
    $line = $_;
    if ($line =~ /^[ \t]*#.*$/) {
	# Skip comments
    } elsif ($line =~ /^[ \t]*files-glob[ \t]+(.*)/) {
	my $files = $1;
    } elsif ($line =~ /^[ \t]*non-critical-external[ \t](.*)/) {
	my $exclude = $1;
    } else {
	print STDERR
	    "$program: Unknown line " . $line_number . " " .
	    "found in file \`" . $rules_file . "'\n";
	exit 1;
    }

    $line_number++;
}

close($rules_handle);

my @filenames;
my %modules;

@filenames = @ARGV;
%modules   = ();

for my $filename (@filenames) {
    my $filehandle;

    if (!open($filehandle, "<", $filename)) {
	print STDERR "Unable to open \`$filename' for reading ($!)\n";
	exit 1;
    }

    while (<$filehandle>) {
	if ($_ =~ /^use[ \t]*(.*);$/) {
	    if (exclude_file($1)) {
		$modules{$1} = "EXCLUDE";
	    } else {
		$modules{$1} = "INCLUDE";
	    }
	}
    }
    
    close($filehandle);
}

print "#\n";
print "# Autogenerated file, DO NOT EDIT\n";
print "#\n";
print "\n";
print "AC_DEFUN([PERL_AUTOFRISK_CHECKS],[\n";
for my $key (keys(%modules)) {
    if ($modules{$key} =~ /^INCLUDE$/) {
	print "AX_PROG_PERL_MODULES([$key])\n";
    } else {
	print "# AX_PROG_PERL_MODULES([$key])\n";
    }
}
print "])\n";
print "\n";
print "AC_DEFUN([PERL_AUTOFRISK_SUMMARY],[\n";
print "])\n";

exit 0;
